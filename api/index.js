// api/index.js - Arquivo de entrada para Vercel (Serverless Function)
const path = require('path');

// ==========================================
// CONFIGURA√á√ÉO PARA PRODU√á√ÉO (VERCEL)
// ==========================================
console.log('üöÄ Inicializando fun√ß√£o serverless para Vercel');
console.log('üîß NODE_ENV:', process.env.NODE_ENV);
console.log('üîß Timestamp:', new Date().toISOString());

// Definir ambiente como produ√ß√£o para Vercel
if (!process.env.NODE_ENV) {
  process.env.NODE_ENV = 'production';
}

// Verificar vari√°veis cr√≠ticas para Vercel
const requiredVars = ['REACT_APP_SUPABASE_URL', 'SUPABASE_SERVICE_ROLE_KEY'];
const missingVars = requiredVars.filter(varName => !process.env[varName]);

if (missingVars.length > 0) {
  console.error('‚ùå ERRO VERCEL: Vari√°veis de ambiente faltando:', missingVars);
  console.error('üîß Configure essas vari√°veis no painel do Vercel');
}

// ==========================================
// IMPORTAR E EXPORTAR SERVIDOR PRINCIPAL
// ==========================================
try {
  // Importar o servidor principal
  const app = require('../server/server.js');
  
  console.log('‚úÖ Servidor principal importado com sucesso para Vercel');
  
  // Exportar como fun√ß√£o serverless para Vercel
  module.exports = app;
  
} catch (error) {
  console.error('‚ùå ERRO ao importar servidor para Vercel:', error.message);
  console.error('üîß Stack trace:', error.stack);
  
  // Exportar uma fun√ß√£o de erro como fallback
  module.exports = (req, res) => {
    res.status(500).json({
      error: 'Erro de inicializa√ß√£o do servidor',
      message: error.message,
      timestamp: new Date().toISOString()
    });
  };
} 